openapi: 3.0.X
info:
  title: API сервер для проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: offers
    description: Действия с объявлениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.

paths:
  /offers/create:
    post:
      tags:
        - offers
      summary: Создание нового предложения #5.1.
      description: Создание нового предложения
      parameters:
       - name: X-Token
         in: header
         description: Только для авторизованных пользователей
         example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      requestBody:
        description: Информация для создания нового предложения.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'
        required: true
      responses:
        "201":
          description: Предложение успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "409":
          description: Предложение не создано
  /offers/{offerId}:
    put:
      tags:
        - offers
      summary: Редактирование предложения #5.2
      description: Редактирование предложения
      parameters:
       - name: X-Token
         in: header
         description: Только для авторизованных пользователей
         example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
       - name: offerId
         in: query
         description: ИД предложения
      requestBody:
        description: Информация, необходимая для редактирования предложения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editOffer'
        required: true
      responses:
        "201":
          description: Предложение обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "400":
          description: Предложение не обновлено

    delete:
      tags:
        - offers
      summary: Удаление предложения #5.3
      description: Удаление предложения
      parameters:
       - name: X-Token
         in: header
         description: Только для авторизованных пользователей
         example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
       - name: offerId
         in: query
         description: ИД предложения
      responses:
        "204":
          description: Предложение удалено
        "400":
          description: Предложение не удалено
    get:
      tags:
        - offers
      summary: Детальная информация по предложению #5.5
      description: Детальная информация по предложению
      parameters:
       - name: offerId
         in: query
         description: ИД предложения
      responses:
        "201":
          description: Детальная информация по предложению
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
  /offers:
      get:
        tags:
          - offers
        summary: Список предложений по аренде #5.4
        description: Список предложений по аренде
        responses:
          "200":
            description: Список предложений по аренде
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/offers'

  /offers/{city}:
      get:
        tags:
          - offers
        summary: Премиальные предложения для города #5.12
        description: Возвращает массив премиальных предложений для определённого города.
        parameters:
         - name: city
           in: query
           description: Город
        responses:
          "201":
            description: Премиальные предложения для города
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/offers'
          "404":
            description: Список премиальных предложений для города не получен

  /offers/favorite:
      get:
        tags:
          - offers
        summary: Список избранных предложений #5.13
        description: Возвращает массив предложений, добавленных в избранное.
        parameters:
         - name: X-Token
           in: header
           description: Только для авторизованных пользователей
           example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
        responses:
          "201":
            description: Список избранных предложений
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/offers'
          "404":
            description: Список избранных предложений не получен

  /offers/favorite/{offerId}/{status}:
      post:
        tags:
          - offers
        summary: Добавление и удаление предложения в/из избранного #5.14
        description: Добавление и удаление предложения в/из избранного.
        parameters:
         - name: X-Token
           in: header
           description: Только для авторизованных пользователей
           example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
         - name: offerId
           in: query
           description: ИД предложения
         - name: status
           in: query
           description: Статус 1 - избранное, 0 - не избранное
        responses:
          "201":
            description: Статус предложения изменен
          "400":
            description: Статус предложения не изменен
  /comments:
      get:
        tags:
          - comments
        summary: Список комментариев для предложения #5.6
        description: Список комментариев для предложения
        responses:
          "200":
            description: Список комментариев для предложения успешно получен
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/comments'
          "400":
            description: Список комментариев не получен
  /comment:
        post:
          tags:
            - comments
          summary: Добавление комментария #5.7
          description: Добавление комментария
          parameters:
           - name: X-Token
             in: header
             description: Только для авторизованных пользователей
             example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
          requestBody:
            description: Добавление комментария
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/comment'
            required: true
          responses:
            "200":
              description: Комментарий успешно добавлен
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/comment'
            "400":
              description: Комментарий не добавлен
  /users/create:
      post:
        tags:
          - users
        summary: Создание нового пользователя #5.8
        description: Создание нового пользователя
        requestBody:
          description: Информация для создания нового пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUser'
          required: true
        responses:
          "201":
            description: Пользователь зарегистрирован. Объект пользователя.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/user'

          "409":
            description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя #5.9
      description: Вход в закрытую часть приложения
      responses:
        "201":
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Авторизация не пройдена
    get:
      tags:
        - users
      summary: Проверка состояния пользователя #5.11
      description: Возвращает информацию по авторизованному пользователю
      responses:
        "200":
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "400":
          description: Авторизация не пройдена
  /users/logout:
    delete:
      tags:
        - users
      summary: Выход из закрытой части приложения #5.10
      description: Выход из закрытой части приложения (только если авторизация выполняется на основе сессий)
      responses:
        "204":
          description: Сеанс завершен



components:
  schemas:
    offer:
      type: object
      properties:
        title:
          type: string
          example: Предложение 1
          minLength: 10
          maxLength: 100
        description:
          type: string
          example: Предложение № 1
          minLength: 20
          maxLength: 1024
        postDate:
          type: string
          example: 2017-07-21T17:32:28Z
        city:
          type: string
          enum: [Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf]
          example: Paris
        prevImg:
          type: string
          example: offer1.jpg
        image:
          type: array
          items:
             type: string
             example: offer1.jpg
          minItems: 6
          maxItems: 6
        isPremium:
          type: boolean
          example: true
        isFavorite:
          type: boolean
          example: false
        rating:
          type: number
          format: float
          example: 2.5
          minimum: 1
          maximum: 5
        type:
          type: string
          enum: [apartment, house, room, hotel]
          example: apartment
        rooms:
          type: integer
          example: 2
          minimum: 1
          maximum: 8
        guests:
          type: integer
          example: 5
          minimum: 1
          maximum: 10
        price:
          type: number
          example: 500
          minimum: 100
          maximum: 100000
        goods:
          type: array
          items:
             type: string
             enum: [Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridge]
             example: Breakfast
          minItems: 1
        user:
          $ref: '#/components/schemas/createUser'
        comments:
          type: number
          example: 10
        location:
          $ref: '#/components/schemas/location'

    offers:
      type: array
      items:
         type: object
         properties:
           price:
             type: number
             example: 500
             minimum: 100
             maximum: 100000
           title:
             type: string
             example: Предложение 1
             minLength: 10
             maxLength: 100
           type:
             type: string
             enum: [apartment, house, room, hotel]
             example: apartment
           isFavorite:
             type: boolean
             example: false
           postDate:
             type: string
             example: 2017-07-21T17:32:28Z
           city:
             type: string
             enum: [Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf]
             example: Paris
           prevImg:
             type: string
             example: offer1.jpg
           isPremium:
             type: boolean
             example: true
           rating:
             type: number
             format: float
             example: 2.5
             minimum: 1
             maximum: 5
           comments:
             type: number
             example: 10

    editOffer:
      type: object
      properties:
        offerId:
           type: string
           example:  6329c3d6a04ab1061c6425ea
        offer:
           $ref: '#/components/schemas/offer'

    comment:
      type: object
      properties:
        comment:
          type: string
          example: Комментарий 1
          minLength: 10
          maxLength: 100
        postDate:
          type: string
          example: 2017-07-21T17:32:28Z
        rating:
          type: number
          example: 3
          minimum: 1
          maximum: 5
        user:
          $ref: '#/components/schemas/createUser'

    comments:
      type: array
      items:
         type: object
         $ref: '#/components/schemas/comment'

    createUser:
      type: object
      properties:
        name:
          type: string
          example: Ivan
        email:
          type: string
          example: ivan@htmlacademy.ru
        password:
          type: string
          example: 123456
        userType:
          type: string
          enum: [standard, pro]
          example: standart

    user:
      type: object
      properties:
        name:
          type: string
          example: Ivan
        email:
          type: string
          example: ivan@htmlacademy.ru
        userType:
          type: string
          enum: [standard, pro]
          example: standart
        token:
          type: string
          example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=

    location:
      type: object
      properties:
        latitude:
          type: number
          format: float
          example: 48.85661
        longitude:
          type: number
          format: float
          example: 2.351499
